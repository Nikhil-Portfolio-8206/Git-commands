-> You can write the JavaScript simple functions using chrome developer tool using shortcut (F12 or Ctrl + shift + i) on windows.

-> Use console option for single script run and use snippet option for multiple script at a time.

-> Ctrl + L or console.clear();  To clear console option in chrome
-> Long press refresh to remove all cache and hard reload.

----Alert function----
Alert("hello world");

----------Data type--------
String, Number, Boolean

----------Variable name------------
Allowed only number, character, $, _(underscore) , first letter must not be a digit   ->while defining a Variable

----------String Concatenation-------
"Hello" + "_" + "World" =>output  Hello_World

-----------String length-------
Return number of character used in String
var name="Hello"
name.length = 5 (number of character including space)

Example:-
var para1= prompt("Write your tweet:");
var para2= para1.length;
alert("you have written " +para2+ " and you have left " + (100-para2)+ " character remaining.");

-------------Slicing and extracting part of string-----------------
var name ="Nikhil";
name.slice(0,1);

output - N

var name ="Nikhil";
name.slice(5,6);

output - l

var name ="Nikhil";
name.slice(0,3);

output- Nik

var name ="Nikhil";
name.slice(1,5);

output- ikhi

---------e.g----
var para1= prompt("Write your tweet:");
var para2= para1.slice(0,140);
alert(para2);

OR signle line
alert(prompt("Write your tweet:").slice(0,140));

----------------- toUpperCase and toLowerCase --------------
var name="Nikhil";
name.toUpperCase();
name.toLowerCase();

e.g-
var name=(prompt("What is your name:"));
var count=name.length;
var name1=name.slice(0,1);
var name2=name.slice(1,count);
alert("Your name is " + name1.toUpperCase() + name2.toLowerCase());

------------------------Airthmatic operation ----------
+, -, X, / , %(modulo-give remainder)

---------------------Increment and Decrement operator----------
var x=2;
x=x+1; or x++; output=3
-----
var x=3
x=x+2; or x +=2; output=5

similarly 
+=
-=
*=
/= 
%=
------------------Functions---------
Series of instruction in a block 

Creating a funtion-
function fn_name(){

}

calling a function-
fn_name();

------------------Calling a function with input-------
fn_name(input value for fn);

e.g-
function getMilk(money) {   
 console.log("Buy " + money/15 + " number of bottles");
}
getMilk(60);

-------------Calling a function with return value-------
function getMilk(money) {   
 console.log("Buy " + money/15 + " number of bottles");
 return money%15;
}
 var Remainder = getMilk(62);

----------------------- Example----------
function lifeInWeeks(age) {   
  
   let age_rem=90-age;
   let days=age_rem*365;
  let weeks=age_rem*52;
  let months=age_rem*12;
  console.log("You have "+ days + " days, " + weeks + " weeks, and " +months+ " months left.");
}
lifeInWeeks(56);
----------------------BMI calcualtor-------------
function bmiCalculator(weight,height){
     let bmi_cal=(weight)/(height*height); or let bmi_cal=(weight)/Math.pow((height/100),2);
    let bmi_roundoff=Math.floor(bmi_cal);
    return bmi_roundoff;
}
--------conditional--------
function bmiCalculator (weight, height) {
    let bmi_cal=(weight)/(height*height);
    let bmi=Math.floor(bmi_cal);
    if(bmi<18.5){
        return "Your BMI is " +bmi+", so you are underweight.";
    }
    else if(bmi>=18.5 && bmi<=24.9){
        return "Your BMI is "+bmi+", so you have a normal weight.";
    }
    else{
        return "Your BMI is "+bmi+", so you are overweight.";
    }
}
---------- Random number generator----------
var n = Math.random();   this will generate random number b/w 0-0.9999999999999999 (including 0 and excluding 1)

e.g-
prompt("Your name:");
prompt("Your partner name:");
var n=Math.random();
n=n*100+1;
alert("Your score is " + Math.floor(n)+ "%");

------------Comparators---------

=== equal
!== not equal
>   greater than
<   lesser than
>=  greater or equal
<=  lesser or equal

key difference b/w === and == , == check only value but === not only check value but also data type.

------------- combining comparators--------
 &&  - AND
 ||  - OR
 !   - NOT
---------------To check Leap year-----------
function isLeapyear(year) {
    let check1=year%4;
    let check2=year%100;
    let check3=year%400;
    if(check1===0 && check2!==0 || check3===0){
        return "Leap year";
    }
    else{
        return "Not a leap year";
    }
}
isLeapyear(2016);
---------------Array--array length, and includes function------------
var array=["Nikhil","sumit","pradeep","Shubh","Shaurya"];
var checklist=prompt();
var count=array.length;
if(array.includes(checklist)){
    console.log("allowed");
}
else{
    console.log("Not allowed");
}

---Push and pop function----
array.push("jay"); -add one element at the last of an array
array.pop(); -Remove last element of an array

-------------------- Fizz and Buzz problem----------------
var output=[];
var count=1;
function fizzBuzz(){
    while(count<=100){
        if(count%3===0){
        output.push("Fizz");
    }
     else if(count%5===0){
         output.push("Buzz");
    }
    else if(count%3===0 && count%5===0){
        output.push("FizzBuzz");
    }
    else{
        output.push(count);
    }
    count++;
    }    
    console.log(output);
    
}

fizzBuzz();

--------------------- Pick a person randomly from array and have to pay bill ----------------------

var names=["Nikhil","sumit","pradeep","Shubh","Shaurya","Angela", "Ben", "Jenny", "Michael", "Chloe"];

function whosPaying(names) {
    let count=names.length;
    let Randonperson=Math.random()*count;
    let Paybill=Math.floor(Randonperson);
return names[Paybill]+ " is going to buy lunch today!";
}
whosPaying(names);
-------------------while loop - generally used to check state------------

var output=[];
var count=1;
function fizzBuzz(){
    while(count<=100){
        if(count%3===0){
        output.push("Fizz");
    }
     else if(count%5===0){
         output.push("Buzz");
    }
    else if(count%3===0 && count%5===0){
        output.push("FizzBuzz");
    }
    else{
        output.push(count);
    }
    count++;
    }    
    console.log(output);
    
}

fizzBuzz();
------------------------- 99 Bottles of Beer lyrics using while loop------------
\n - To break the line and print in next line in JavaScript

var count=99;
while (count>1) {
    console.log(count+ " bottles of beer on the wall, " +count+ " bottles of beer.\nTake one down and pass it around, "+(count-1)+ " bottles of beer on the wall."); 
    count--;
    if(count===1){
        console.log("1 bottle of beer on the wall, 1 bottle of beer.\nTake one down and pass it around, no more bottles of beer on the wall."); 
        count--;
    }
}
if(count===0){
    console.log("No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.");
} 

-------------------- For loop - generally used for iteration -----------
for(var i=1;i<100;i++){
    
}

--------------------Fibonacci series --------------
function fibonacciGenerator(n) {
    var Fibonacci_series=[];
    if(n===1){
        return Fibonacci_series=[0];
    }
    else if(n===2){
        return Fibonacci_series=[0,1];
    }
    else{
       Fibonacci_series=[0,1];
    for(let i=0;i<n-2;i++){
    let sum=Fibonacci_series[i]+Fibonacci_series[i+1];
    Fibonacci_series.push(sum);
    }
         return Fibonacci_series;
    }
}
fibonacciGenerator(4);
-------------------------- JavaScript  ------------

There are 3 way to apply JavaScript:
1. Inline JavaScript:- Directly within HTML elements:  e.g - <body onload=onclick="alert('Hello, World!')">  remember this->  " ' ' "

2. Internal JavaScript:- Within <script> </script> tags: Place the script just before the body closing element.

3. External JavaScript:- In a separate .js file:- <script src="script.js"></script> Place the script just before the body closing element.

---------------------- DOM(Document object model)--------------------------
Structure of HTML document, Browser converts the html into DOM like a tree structure so that we can select the object(html element) and manipulate it.

Function - general purpose(define anywhere), reusable, flexible(take parameters,return values)

DOM Method- object specific,built-in(provided by browser's javascript engine),manupulate content of HTML

The object inside the DOM have:- 
1. Properties -describe the object
   e.g-Get property- object.property;

2. Methods(associated with object in DOM)- what the object can do
   e.g- Set property- object.Method()=0;
   e.g- Call Method-  object.Method(); - do something

----------------


